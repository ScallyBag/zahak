name: Create Release
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - '*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, widows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Build
        run: make build

      - name: Test
        run: make test

      - name: Set env
        run: echo "TAG_NAME=$(echo ${{github.ref}} | sed 's/refs\/tags\///g')" >> $GITHUB_ENV
      - name: Distribute
        run: |
          go run -ldflags "-X 'main.netPath=default.nn' -X 'main.Version=$TAG_NAME'" netgen/nn.go
          ext=""
          osName="linux"
          if [[ ${{matrix.os}} == windows-latest ]]; then
            ext=".exe"
            osName="windows"
          fi
          if [[ ${{matrix.os}} == macos-latest ]]; then
            osName="darwin"
          fi
          mkdir bin
          go build -gcflags -B -o bin ./... && mv bin/zahak"$ext" zahak-"$osName"-amd64-"$TAG_NAME"-avx"$ext"
          if [[ ${{matrix.os}} == ubuntu-latest ]]; then
            apt-get update -y && apt-get install -y gcc make gcc-arm-linux-gnueabi binutils-arm-linux-gnueabi gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu
            CC=arm-linux-gnueabi-gcc GOOS=linux GOARCH=arm go build -gcflags -B -o bin ./... && mv bin/zahak zahak-"$osName"-arm32-"$TAG_NAME"
            CC=aarch64-linux-gnu-gcc GOOS=linux GOARCH=arm64 go build -gcflags -B -o bin ./... && mv bin/zahak zahak-"$osName"-arm64-"$TAG_NAME"
          fi
      - name: Create Release and Upload Assets
        id: create-release-and-upload-asset
        run: |
          set -x
          assets=()
          for asset in bin/zahak-*; do
            assets+=("-a" "$asset")
          done
          tag_name="$TAG_NAME"
          hub release create "${assets[@]}" -m "$tag_name" "$tag_name" || hub release edit "${assets[@]}" -m "$tag_name" "$tag_name"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
